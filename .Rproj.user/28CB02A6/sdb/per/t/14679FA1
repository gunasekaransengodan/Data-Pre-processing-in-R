{
    "collab_server" : "",
    "contents" : "#WorkingDirectry Path Setting\n\ngetwd()\nsetwd(\"<File Path>\") #OR Select Files Using \ngetwd()\n\n#Load Data from Text File\n\ncampaign      <- read.table(\"<File Path:campaign Data Retrived from Data storage>\",header=T,sep=\"\\t\")\ncustomers     <- read.table(\"<File Path:customers info Retrived from Data storage>\",header=T,sep=\"\\t\")\nproducts      <- read.table(\"<File Path:Associated products details Retrived from Data storage>\",header=T,sep=\"\\t\")\ntransactions  <- read.table(\"<File Path:transactions Data Retrived from Data storage>\",header=T,sep=\"\\t\")\n\n#Desctiptive Analysys and Exploring Original Data\n\nstr(campaign)\nstr(customers)\nstr(products)\nstr(transactions) #Data.Frame Data Type\n\n#View Data's In File 'V' Caps\n\nView(campaign)\nView(customers)\nView(products)\nView(transactions)\n\n#Check Summery Data \nsummary(campaign)\nsummary(customers)\nsummary(products)\nsummary(transactions)\n\n#Check Null Or Missed value from the data\n\ncolSums(is.na(campaign))\ncolSums(is.na(customers))\ncolSums(is.na(products))\ncolSums(is.na(transactions)) \n\n#Load some of frequent used packages to support initial data manipulation task and visualize data \n# for better understanding with all type of data\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(reshape2)\nlibrary(lubridate)\n#----------------------------------------------------------------------------------------------------------------------\n#Analysis 1. Based on the transactions, which product category dominates in terms of $amount?\n#(Hint: You will need to merge Transactions and Product data sets and then look at Product category)\n\n#Check Top few data for understanding columns and values\n\nhead(products)\nhead(transactions)\n\n#Merge transactions, products file datas\n\ndataRevenue <- merge(x=transactions, y=products, by=\"Product_Code\", all=T)\n\n#Merge Result Dimention and records\n\ndim(dataRevenue)\ndim(transactions)\ndim(products)\n\n#Sum Result\n\ndataSum <- sum(dataRevenue$Items_Amount)\n\n#Q1 Objective \n\ndataGroupby <- dataRevenue%>%group_by(Product_Category)%>%summarise(revenue=sum(Items_Number), no_item=sum(Items_Number))\n\nrevenueDataUnGroupdataFrame <- dataRevenue%>%filter(Items_Amount>0)%>%group_by(Product_Category)%>%summarise(Count=n(), \n                                                   Percentage_Sum=n()/sum(Items_Amount),\n                                                   Total_Sales=sum(Items_Amount), \n                                                   Sales_Percentage = round(Total_Sales/sum(Items_Amount),2),\n                                                   Average = mean(Items_Amount),\n                                                   Revenue = sum(Items_Number))%>%\n                                                   ungroup()%>%arrange(-Total_Sales)%>%mutate(Sales.Contribution_for=rep(\"Product\",7))%>%data.frame()\n  \n\n#Total Sales\n#Variable - totalSales & Value\n#Using Product_Category as id variables\n\ntotalSales <- dataRevenue%>%filter(Items_Amount>0)%>%group_by(Product_Category)%>%summarise(totalSales = sum(Items_Amount))%>%melt()\n\n#Per Sales Figure\n\ntotalSales$perSales <- round(totalSales$value/sum(dataRevenue$Items_Amount),2)\n\n#View quick Result Summary\n\nView(dataGroupby)\nView(revenueDataUnGroupdataFrame)\nView(totalSales)\n\n#Order By Value of Revenue to no dominating no#\n\ndataOrderby       <- dataGroupby%>%arrange(desc(revenue))\ndataFrameOrderby  <- revenueDataUnGroupdataFrame%>%arrange(desc(Average))\ntotalSalesOrderBy <- totalSales%>%arrange(desc(value))\n\n#Quick Graphical View to see amount of revenue generated by Each Category(Best Understanding descriptions)\n\nrevenueDataPlot <- ggplot(totalSales,aes(x=Product_Category,y=value,fill=Product_Category))\n\nrevenueDataPlot + geom_bar(stat=\"identity\",alpha=0.7) +\n  labs(x=\"Product Category\", fill=\"Product Category\") +\n  geom_text(aes(label=perSales,color=perSales), vjust=-0.3,size=5) +\n  theme_classic() + \n  scale_fill_discrete(c=50,h=c(1,360),h.start=50) + \n  guides(color=FALSE) +\n  xlab(\"Product Category\")+\n  ylab(\"sales in $\") +\n  ggtitle(\"Revenue Generated by each category\") +\n  scale_y_continuous(breaks = seq(0,35000000,5000000))\n\n#Write solution output data in.csv file\n\nwrite.csv(revenueDataUnGroupdataFrame,\"Revenue generated by product Category.csv\", row.names = FALSE)\n\n#Analysys Result\n#Answer Prediction - Product Category 'Entertainment' dominates with 40% of total Revenue.  \n#----------------------------------------------------------------------------------------------------------------------\n\n\n#Analysis 2. Perform a suitable age grouping and find out contribution of each of the age group in terms of $ amount spent.\n#(Hint: A merge between Customer and Transaction table will be required)\n\n#Merge Tables transactions And customers\n\ndataAgeGroup <- merge(x=transactions,y=customers,by=\"Card_ID\")\n\n#Quick Details Check\n\nstr(dataAgeGroup)\nsummary(dataAgeGroup)\nView(dataAgeGroup)\n\n#Try create Age from Available DOB Data, Derive Data and create New Column\n\ndataAgeGroup$Birth_Date <- ymd(dataAgeGroup$Birth_Date)\nyear<-duration(num=1,units=\"years\")\ndataAgeGroup$age=interval(dataAgeGroup$Birth_Date,Sys.Date())/year\n\n#Check Quickly top Records with Age Colum\n\nhead(dataAgeGroup$age,100)\ntail(dataAgeGroup$age,100)\n\n#Make a Round value to see meaningful Age\n\ndataAgeGroup$age <- round(dataAgeGroup$age)\n\n#Add Age Groups Column with meaningful Break\n\ndataAgeGroup <- arrange(dataAgeGroup,age)\ndataAgeGroup$ageGroup <- cut(dataAgeGroup$age,breaks=18)\n\n#Quick Check of New two Columns\n\nView(dataAgeGroup)\n\n#Calculate Expenditures\n\ntotalExpenditures <- sum(dataAgeGroup$Items_Amount)\n\n#Check Total\n\ntotalExpenditures\n\n#Summarize Age group and Expenditures contribution of each of the age group in terms of $ amount spent\n\nageDataUnGroupdataFrame <- dataAgeGroup%>%filter(Items_Amount>0)%>%group_by(ageGroup)%>%summarise(Count=n(), \n                                                              Percentage_Count=n()/sum(Items_Amount),\n                                                              Total_Contribution=sum(Items_Amount), \n                                                              Contribution_Percentage = round(Total_Contribution/sum(Items_Amount),2),\n                                                              Average = mean(Items_Amount),\n                                                              Spent = sum(Items_Number))%>%\n                                                              ungroup()%>%arrange(-Total_Contribution)%>%data.frame()\n\n\ntotalSpent <- dataAgeGroup%>%filter(Items_Amount>0)%>%group_by(ageGroup)%>%summarise(totalSpent=sum(Items_Amount))%>%melt()\n\n#Quick View\n\nView(totalSpent)\nsummary(totalSpent)\nView(ageDataUnGroupdataFrame)\n\n#Per Sum Amount from total spent and Cumulative Sum \n\ntotalSpent$perTotal <- round(totalSpent$value/totalExpenditures,2)\ntotalSpent$cumulativePerTotal <- cumsum(totalSpent$perTotal)\n\n\n#Quick Graphical View to see Expenditures contribution of each of the age group in terms of $ amount spent(Best Understanding descriptions)\nAgeDataPlot <- ggplot(totalSpent, aes(x=ageGroup, y=value, fill=ageGroup))\nAgeDataPlot + geom_bar(stat=\"identity\",alpha=0.7) +\n  labs(x=\"Age Group in Years\", fill=\"Age Group in Years\") +\n  geom_text(aes(label=perTotal,color=perTotal), vjust=-0.3,size=5) +\n  theme_classic() + \n  scale_fill_discrete(c=50,h=c(1,360),h.start=50) + \n  guides(color=FALSE) +\n  xlab(\"Age Group in Years\")+\n  ylab(\"Amount Spent in $\") +\n  ggtitle(\"Amount Spent By Different Age groups\") +\n  scale_y_continuous(breaks = seq(0,15000000,1000000))\n\n#Write solution output data in.csv file\n\nwrite.csv(ageDataUnGroupdataFrame,\"Revenue generated by Age Group.csv\", row.names = FALSE)\n\n#Analysys Result\n#Answer Prediction - People from age group 45 to 60 spent the maximum and People age less and equal in 35 and 75 spent Less.\n#----------------------------------------------------------------------------------------------------------------------\n\n#Analysis 3. Find the response rate to the campaign. Also identify the age group of customers where response rate is high. Is there a consistent trend.\n#(Hint: Add age information from customer file to the campaign file, compute response rate by age. This can be done by binning age either in deciles or\n#quartiles and seeing if there is a consistent trend)\n\n#Method1:Deciles\n#Quick Campaign Exploration\n\nView(campaign)\nsummary(campaign) #FALSE:5632,TRUE :325  \n\n#Response Rate for executed Campaign in %\n#Sum of True & FALSE in Campaign_Responce Column in Summary is 5957\n\ncampaignDataPercentage <- campaign%>%group_by(Campaign_Responce)%>%summarise(Count=n(),\n                                      Percentage_Count =n() / 5957 * 100)%>%\n                                      arrange(-Campaign_Responce)%>%data.frame()\n\n#Identify the age group of customers where response rate is high. Is there a consistent trend.\n#Create Age column using DOB\n\ncustomers$Birth_Date <- ymd(customers$Birth_Date)\nyear <- duration(num = 1, units = \"years\")\ncustomers$age = interval(customers$Birth_Date,Sys.Date()) / year\ncustomers$age <- round(customers$age)\n\n#Merge Both Campaign and Customers Table\n\ncustomersCampaign <- merge(x=campaign, y=customers,by=\"Card_ID\",x.all=T)\n\n#Quick Look to check new age Column\n\nstr(customersCampaign)\nsummary(customersCampaign)\n\n#Add Age Groups Column with meaningful Break\n\ncustomersCampaign$ageGroup <- cut(customersCampaign$age, breaks = 10)\n\n#Quick Look to check new ageGroup Column\n\nsummary(customersCampaign)\nstr(customersCampaign)\n\n#Find Response Rate to the Campaign as Q3 Objective\n\ncustomersCampaign$Campaign_Responce <- as.factor(customersCampaign$Campaign_Responce)\ncustomersCampaignResponseTable <- table(customersCampaign$ageGroup,customersCampaign$Campaign_Responce)\n\ncustomersCampaignResponseTable\n\n#Quick Graphical View to see Response by Age Group for Campaign(Best Understanding descriptions)\n\nstr(customersCampaignResponseTable)\nresponseDataFrame <- as.data.frame(customersCampaignResponseTable)\n\nstr(responseDataFrame)\n\n#Assign proper Name for Column\n\nnames(responseDataFrame) <- c(\"Age Group\",\"Response\", \"Count\")\nView(responseDataFrame)\n\ncustomersCampaignResponseRate <- customersCampaignResponseTable[, \"TRUE\"] / rowSums(customersCampaignResponseTable) * 100\n\n#Quick Look Resonse Rate\n\nstr(customersCampaignResponseRate)\n\nresponseRateDataFrame <- as.data.frame(customersCampaignResponseRate)\n\n#Assign proper Name for Column\n\nstr(responseRateDataFrame)\n#names(responseRateDataFrame) <- c(\"Age Group in Years\",\"Response Rate\")\n\n#Write solution output data in.csv file\n\nwrite.csv(customersCampaignResponseRate,\"Response by Age Group.csv\", row.names = TRUE)\n\n#Method2\n#Other Way considering only 4 Quantile separation graph\n\nQ3 <- merge(x=campaign, y=customers,by=\"Card_ID\", all.x=T) #Card_ID is Unique 'by'\n\n#Add Age Column using DOB\n\nQ3%>%mutate(age=(Sys.Date() - as.Date(Birth_Date)) / 365)\n\n#Quantile Of Age Column\n\nquantile(as.numeric(Q3$age), c(0,2.5,5,7.5,10) / 10)\n\n#Age Group based on Quantile\n\nQ3 <- Q3%>%mutate(quantile=ntile(as.numeric(age),4))\n\n#Binary Dummy variable to observe Cabaign Response based on True, False as 1, 0 Respectively\n\nQ3$Campaign_Responce <- gsub(\"TRUE\",1,Q3$Campaign_Responce)\nQ3$Campaign_Responce <- gsub(\"FALSE\",0,Q3$Campaign_Responce)\n\n#Response Rate with Quantile\n\nQ3CampaignResponse <- Q3%>%group_by(quantile)%>%summarise(Response_Rate=sum(as.numeric(Campaign_Responce)/n())*100)\n\n#Add a column to show age group and qualtile range\n\nquantile(round(as.numeric(Q3$age), digits=2), c(0,2.5,5,7.5,10) / 10)\n\nQ3CampaignResponse <- Q3CampaignResponse%>%mutate(Age_Group=c(\"26.25-38.04\",\"48.04-55.11\",\"55.11-62.51\",\"61-51-110.36\"))\nQ3CampaignResponse$Age_Group <- as.factor(Q3CampaignResponse$Age_Group)\n\n#Write solution output data in.csv file\n\nwrite.csv(Q3CampaignResponse,\"Response by Age Group Quantile.csv\", row.names = FALSE)\n\ncampaignDataPlot <- ggplot(Q3CampaignResponse,aes(x=Age_Group,y=Response_Rate,label=round(Response_Rate,digits=2))) +\n                    geom_point() + geom_text(vjust=-0.5) \n\n#Quick Graphical View to see Response\n\nplot(campaignDataPlot)\n\nPlotOutput <- data.frame(Age_Group=Q3CampaignResponse$Age_Group,Response_rate=Q3CampaignResponse$Response_Rate)\nplot(PlotOutput)\n\n#Analysys Result\n\n#Method1 \n#Answer Prediction (Deciles:10 Age Group range) - Response Rate tp the Capaign is 7.04%\n                                          #Highest Response rate within age group is 35 to 43\n#File Reference : #Response by Age Group_Edited.ods\n\n#Method2 \n#Answer Prediction (Quantile:4 Age Group Range) - Response Rate tp the Capaign is 6.7%\n                                                  #Highest Response rate within age group is 26 to 48  \n\n#There is no notable consistent Trend among age groups\n\n#----------------------------------------------------------------------------------------------------------------------\n\n#Analysis 4. Repeat the analysis above with \"Tenure\" of customer. (Tenure will be \n\n#defined as the time period between the Date of Registration and 31/12/2002)\n\n#Create Variable for Tenure\n\ncustomersCampaign$Registration_Date <- ymd(customersCampaign$Registration_Date)\n\n#Take a Format with given Date for objective finding\n\nDate = as.Date(\"31/12/2002\",format=\"%d/%m/%Y\")\nyear <- duration(num = 1, units = \"years\")\n\n#Create and Assign Type to Tenure after making Round Value\n\ncustomersCampaign$Tenure = interval(customersCampaign$Registration_Date,Date) / year\ncustomersCampaign$Tenure <- round(customersCampaign$Tenure)\ncustomersCampaign$Tenure <- as.factor(customersCampaign$Tenure)\n\n#Quick Look value in table\n\nstr(customersCampaign)\nsummary(customersCampaign)\nView(customersCampaign)\n\n#Response Rate Calculation \n\ncustomersCampaignTenure <- table(customersCampaign$Tenure,customersCampaign$Campaign_Responce)\ncustomersCampaignTenureRate <- customersCampaignTenure[, \"TRUE\"] / rowSums(customersCampaignTenure) * 100\n\n#Write solution output data in.csv file\n\nwrite.csv(customersCampaignTenureRate,\"Customer Campign Response by Tenure Year.csv\", row.names = TRUE)\n\n#Quick Graph Look\n\nplot(customersCampaignTenureRate)\n\n#Analysys Result\n\n#Answer Prediction -  Response Rate shows tenure of 2 year is the highest amoung customers\n#There is no notable consistent Trend using tenure\n\n#----------------------------------------------------------------------------------------------------------------------\n\n#Analysis 5. Create a cross tab of response rate between Age(Decile) and Tenure of customers. Do you observe anything?\n\ncustomersCampaignByAgeTenure <- table(customersCampaign$Tenure,customersCampaign$ageGroup,customersCampaign$Campaign_Responce)\ncustomersCampaignByAgeTenureRate <- customersCampaignByAgeTenure / rowSums(customersCampaignByAgeTenure) *100\n\n#Quick Graph Look\n\nplot(customersCampaignByAgeTenureRate)\n\ncustomersCampaignByAgeTenureRateToWrite <- as.data.frame(customersCampaignByAgeTenureRate)\nnames(customersCampaignByAgeTenureRateToWrite) <- c(\"Tenure Years\",\"Age Group\",\"Response\", \"Count\")\n\n#Write solution output data in.csv file\n\nwrite.csv(customersCampaignByAgeTenureRateToWrite,\"Customer Campign Response by Age & Tenure Year.csv\", row.names = TRUE)\n\n#Analysys Result\n\n#Answer Prediction -  Response Rate shows for all tenure from customers of age starting from 43 to 68\n\n#To specifically Rank of top 3 Age Group for Tenrure response's are\n#Rank 1 : 52 - 60\n#Rank 2 : 43 - 52\n#Rank 3 : 60 - 69\n\n#----------------------------------------------------------------------------------------------------------------------\n\n#Analysis 6. Which mode of payment is most popular? Is mode of payment affected by the time of transaction?\n#(Hint: Extract hour information from timestamp column by using appropriate date conversion \n#function, based on the hour of the day extracted, you can do an appropriate classification \n#and then look at the cross tab between payment mode and time of day)\n\n#New Naming Customer with Transaction details for below observation check\n\ncustomersTransactions <- merge(x=transactions,y=customers,by=\"Card_ID\")\n\n#Format allignments and setting specific time to observe changes and details\n\ncustomersTransactions$Registration_Date <- ymd(customersTransactions$Registration_Date)\nDate = as.Date(\"31/12/2002\", format=\"%d/%m/%Y\")\n\n#Tenure column fixing\n\nyear <- duration(num =1, units=\"years\")\ncustomersTransactions$Tenure = interval(customersTransactions$Registration_Date,Date) / year\ncustomersTransactions$Tenure <- round(customersTransactions$Tenure)\n\n#Timestamp column and Hour Couln fixing to check Trend for time of dat\n\ncustomersTransactions$Timestamp <- ymd_hms(customersTransactions$Timestamp)\ncustomersTransactions$hour <- hour(customersTransactions$Timestamp)\n\n#Check the cross tab between payment mode and time of day\n\ncustomersTransactionsPaymentByTime <- table(customersTransactions$Payment_Method, customersTransactions$hour)\ncustomersTransactionsPaymentByTimeRate <- customersTransactionsPaymentByTime / rowSums(customersTransactionsPaymentByTime) * 100\n\nplot(customersTransactionsPaymentByTimeRate)\n\n#Write solution output data in.csv file\n\nwrite.csv(customersTransactionsPaymentByTimeRate,\"Customer's Prefered Payment mode.csv\", row.names = TRUE)\n\n#Cash       : 0.209\n#CreditCard : 0.238\n#DebitCard  : 0.229\n\n#Analysys Result\n\n#Answer Prediction -  The most popular method of payment is Credit Card. (But difference is small)\n# Looks the mode of payment is not affecting  by the time of transaction\n\n#----------------------------------------------------------------------------------------------------------------------\n#Analysis 7. Do you think, based on the data, that age and gender has any impact on $amount spent?\n#(Hint: You'll need to merge customer and transaction tables appropriately and  then do an age classification, \n#post that you can create a cross tab between gender and age to arrive at an opinion)\n\n#Reuse and assign data frame in different name to use for Q7 Analysys\n\ncustomersTransactionsByageGender <- dataAgeGroup\n\n# Response Rate Preparation\n# Tilde is used to separate the left- and right-hand sides in a model formula\n\ncustomersTransactionsByageGenderRate <- xtabs(customersTransactionsByageGender$Items_Amount~customersTransactionsByageGender$Gender + customersTransactionsByageGender$ageGroup)\ncustomersTransactionsByageGenderImpact <- customersTransactionsByageGenderRate / rowSums(customersTransactionsByageGenderRate) * 100                                              \n\nplot(customersTransactionsByageGenderImpact)\n\n#Write solution output data in.csv file\n\nwrite.csv(customersTransactionsByageGenderImpact,\"Age and gender impact on amount spent.csv\", row.names = TRUE) \n\n#Analysys Result\n\n# Answer Prediction -  People of Age group 45 to 60 in Both Gender spending Most. \n# No specific significant impact only becasue of gender.\n\n#----------------------------------------------------------------------------------------------------------------------\n#Analysis 8. Produce a histogram for \"tenure of a customer\" separately for male and female customers.\n\ncustomersTransactions$Registration_Date <- ymd(customersTransactions$Registration_Date)\nDate = as.Date(\"31/12/2002\", format=\"%d/%m/%Y\")\nyear <- duration(num =1, units =\"years\")\ncustomersTransactions$Tenure = interval(customersTransactions$Registration_Date,Date) / year\ncustomersTransactions$Tenure <- round(customersTransactions$Tenure,2)\n\npar(mfrow = c(2,1))\n\n\ntenureofaCustomerPlotMale <- ggplot(customersTransactions%>%filter(Gender==\"M\"), aes(x=Tenure, color=Gender,fill=Gender)) +\n                         geom_histogram(bins=10,position = \"dodge\",alpha=\"0.5\") +\n                         theme_classic() + xlab(\"Tenure of Customer in Years\") +\n                         ylab(\"Number of Customers\") + ggtitle(\"Tenure of Customer (Male)\")  \n\ntenureofaCustomerPlotFemale <- ggplot(customersTransactions%>%filter(Gender==\"F\"), aes(x=Tenure, color=Gender,fill=Gender)) +\n  geom_histogram(bins=10,position = \"dodge\",alpha=\"0.5\") +\n  theme_classic() + xlab(\"Tenure of Customer in Years\") +\n  ylab(\"Number of Customers\") + ggtitle(\"Tenure of Customer(Female)\")  \n\nlibrary(gridExtra)\n\ngrid.arrange(tenureofaCustomerPlotMale,tenureofaCustomerPlotFemale, nrow =1, ncol=2)\n\n#Analysys Result\n\n# Answer Prediction -  Plot Code added\n\n#----------------------------------------------------------------------------------------------------------------------\n\n",
    "created" : 1501910856466.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "352505220",
    "id" : "14679FA1",
    "lastKnownWriteTime" : 1501910043,
    "last_content_update" : 1501910043,
    "path" : "E:/GitHub/Data-pre-processing-in-R/Data Preparation.R",
    "project_path" : "Data Preparation.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}